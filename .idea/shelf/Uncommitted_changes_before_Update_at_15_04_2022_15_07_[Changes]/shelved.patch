Index: Tic-Tac-Toe with AI/task/src/tictactoe/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package tictactoe;\r\n\r\nimport tictactoe.opponents.*;\r\nimport java.io.BufferedReader;\r\nimport java.io.IOException;\r\nimport java.io.InputStreamReader;\r\nimport tictactoe.utils.GameStatus;\r\n\r\nimport static tictactoe.utils.TicTacGraphics.*;\r\n\r\npublic class Main {\r\n    private static Opponent firstOpponent;\r\n    private static Opponent secondOpponent;\r\n\r\n    public static void main(String[] args) {\r\n        // write your code here\r\n\r\n        while (true) {\r\n            try {\r\n                while (!start()) {}\r\n            } catch (IOException ioe) {\r\n                System.out.println(\"Game crashed! Check integrity of files!\");\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    static boolean start() throws IOException {\r\n        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));\r\n        GameStatus.over = false;\r\n\r\n        System.out.print(\"Input command: > \");\r\n\r\n        GameChar[][] gameBoard = createField(\"_________\");\r\n        String command = reader.readLine();\r\n\r\n        String[] params = command.split(\" \");\r\n        if (params[0].equals(\"exit\")) System.exit(0);\r\n        else if (params.length != 3 || !params[0].equals(\"start\")) {\r\n            System.out.println(\"Bad parameters!\");\r\n            return false;\r\n        }\r\n\r\n        try {\r\n            firstOpponent = LEVEL.valueOf(params[1].toUpperCase()).createOpponent();\r\n            secondOpponent = LEVEL.valueOf(params[2].toUpperCase()).createOpponent();\r\n        } catch (Exception exc) {\r\n            System.out.println(\"Bad parameters!\");\r\n            return false;\r\n        }\r\n\r\n        firstOpponent.setSign(GameChar.X);\r\n        secondOpponent.setSign(GameChar.O);\r\n\r\n        firstOpponent.setEnemy(secondOpponent);\r\n        secondOpponent.setEnemy(firstOpponent);\r\n\r\n        drawField(gameBoard);\r\n        play(gameBoard);\r\n        return true;\r\n    }\r\n\r\n    static void play(GameChar[][] board) {\r\n        while (true) {\r\n            while (!firstOpponent.makeMove(board)) {}\r\n            if (GameStatus.over) break;\r\n            while (!secondOpponent.makeMove(board)) {}\r\n            if (GameStatus.over) break;\r\n        }\r\n    }\r\n\r\n    private static Opponent createOpponent(String level) {\r\n        switch (level) {\r\n            case \"user\":\r\n                return new Player();\r\n            case \"easy\":\r\n                return new EasyOpponent();\r\n            case \"medium\":\r\n                return new MediumOpponent();\r\n            case \"hard\":\r\n                return new HardOpponent();\r\n            default:\r\n                throw new IllegalArgumentException();\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Tic-Tac-Toe with AI/task/src/tictactoe/Main.java b/Tic-Tac-Toe with AI/task/src/tictactoe/Main.java
--- a/Tic-Tac-Toe with AI/task/src/tictactoe/Main.java	(revision b39973bc7db8c5236c30b83ade98c6b2a671f3b4)
+++ b/Tic-Tac-Toe with AI/task/src/tictactoe/Main.java	(date 1650023955825)
@@ -68,19 +68,4 @@
             if (GameStatus.over) break;
         }
     }
-
-    private static Opponent createOpponent(String level) {
-        switch (level) {
-            case "user":
-                return new Player();
-            case "easy":
-                return new EasyOpponent();
-            case "medium":
-                return new MediumOpponent();
-            case "hard":
-                return new HardOpponent();
-            default:
-                throw new IllegalArgumentException();
-        }
-    }
 }
